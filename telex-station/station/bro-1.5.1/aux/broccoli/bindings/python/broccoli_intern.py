# This file was automatically generated by SWIG (http://www.swig.org).
# Version 1.3.35
#
# Don't modify this file, modify the SWIG interface instead.
# This file is compatible with both classic and new-style classes.

import _broccoli_intern
import new
new_instancemethod = new.instancemethod
try:
    _swig_property = property
except NameError:
    pass # Python < 2.2 doesn't have 'property'.
def _swig_setattr_nondynamic(self,class_type,name,value,static=1):
    if (name == "thisown"): return self.this.own(value)
    if (name == "this"):
        if type(value).__name__ == 'PySwigObject':
            self.__dict__[name] = value
            return
    method = class_type.__swig_setmethods__.get(name,None)
    if method: return method(self,value)
    if (not static) or hasattr(self,name):
        self.__dict__[name] = value
    else:
        raise AttributeError("You cannot add attributes to %s" % self)

def _swig_setattr(self,class_type,name,value):
    return _swig_setattr_nondynamic(self,class_type,name,value,0)

def _swig_getattr(self,class_type,name):
    if (name == "thisown"): return self.this.own()
    method = class_type.__swig_getmethods__.get(name,None)
    if method: return method(self)
    raise AttributeError,name

def _swig_repr(self):
    try: strthis = "proxy of " + self.this.__repr__()
    except: strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)

import types
try:
    _object = types.ObjectType
    _newclass = 1
except AttributeError:
    class _object : pass
    _newclass = 0
del types


FALSE = _broccoli_intern.FALSE
TRUE = _broccoli_intern.TRUE
BRO_TYPE_UNKNOWN = _broccoli_intern.BRO_TYPE_UNKNOWN
BRO_TYPE_BOOL = _broccoli_intern.BRO_TYPE_BOOL
BRO_TYPE_INT = _broccoli_intern.BRO_TYPE_INT
BRO_TYPE_COUNT = _broccoli_intern.BRO_TYPE_COUNT
BRO_TYPE_COUNTER = _broccoli_intern.BRO_TYPE_COUNTER
BRO_TYPE_DOUBLE = _broccoli_intern.BRO_TYPE_DOUBLE
BRO_TYPE_TIME = _broccoli_intern.BRO_TYPE_TIME
BRO_TYPE_INTERVAL = _broccoli_intern.BRO_TYPE_INTERVAL
BRO_TYPE_STRING = _broccoli_intern.BRO_TYPE_STRING
BRO_TYPE_PATTERN = _broccoli_intern.BRO_TYPE_PATTERN
BRO_TYPE_ENUM = _broccoli_intern.BRO_TYPE_ENUM
BRO_TYPE_TIMER = _broccoli_intern.BRO_TYPE_TIMER
BRO_TYPE_PORT = _broccoli_intern.BRO_TYPE_PORT
BRO_TYPE_IPADDR = _broccoli_intern.BRO_TYPE_IPADDR
BRO_TYPE_NET = _broccoli_intern.BRO_TYPE_NET
BRO_TYPE_SUBNET = _broccoli_intern.BRO_TYPE_SUBNET
BRO_TYPE_ANY = _broccoli_intern.BRO_TYPE_ANY
BRO_TYPE_TABLE = _broccoli_intern.BRO_TYPE_TABLE
BRO_TYPE_UNION = _broccoli_intern.BRO_TYPE_UNION
BRO_TYPE_RECORD = _broccoli_intern.BRO_TYPE_RECORD
BRO_TYPE_LIST = _broccoli_intern.BRO_TYPE_LIST
BRO_TYPE_FUNC = _broccoli_intern.BRO_TYPE_FUNC
BRO_TYPE_FILE = _broccoli_intern.BRO_TYPE_FILE
BRO_TYPE_VECTOR = _broccoli_intern.BRO_TYPE_VECTOR
BRO_TYPE_ERROR = _broccoli_intern.BRO_TYPE_ERROR
BRO_TYPE_PACKET = _broccoli_intern.BRO_TYPE_PACKET
BRO_TYPE_SET = _broccoli_intern.BRO_TYPE_SET
BRO_TYPE_MAX = _broccoli_intern.BRO_TYPE_MAX
BRO_CFLAG_NONE = _broccoli_intern.BRO_CFLAG_NONE
BRO_CFLAG_RECONNECT = _broccoli_intern.BRO_CFLAG_RECONNECT
BRO_CFLAG_ALWAYS_QUEUE = _broccoli_intern.BRO_CFLAG_ALWAYS_QUEUE
BRO_CFLAG_SHAREABLE = _broccoli_intern.BRO_CFLAG_SHAREABLE
BRO_CFLAG_DONTCACHE = _broccoli_intern.BRO_CFLAG_DONTCACHE
BRO_CFLAG_YIELD = _broccoli_intern.BRO_CFLAG_YIELD
BRO_CFLAG_CACHE = _broccoli_intern.BRO_CFLAG_CACHE
class BroCtx(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BroCtx, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BroCtx, name)
    __repr__ = _swig_repr
    __swig_setmethods__["lock_func"] = _broccoli_intern.BroCtx_lock_func_set
    __swig_getmethods__["lock_func"] = _broccoli_intern.BroCtx_lock_func_get
    if _newclass:lock_func = _swig_property(_broccoli_intern.BroCtx_lock_func_get, _broccoli_intern.BroCtx_lock_func_set)
    __swig_setmethods__["id_func"] = _broccoli_intern.BroCtx_id_func_set
    __swig_getmethods__["id_func"] = _broccoli_intern.BroCtx_id_func_get
    if _newclass:id_func = _swig_property(_broccoli_intern.BroCtx_id_func_get, _broccoli_intern.BroCtx_id_func_set)
    __swig_setmethods__["dl_create_func"] = _broccoli_intern.BroCtx_dl_create_func_set
    __swig_getmethods__["dl_create_func"] = _broccoli_intern.BroCtx_dl_create_func_get
    if _newclass:dl_create_func = _swig_property(_broccoli_intern.BroCtx_dl_create_func_get, _broccoli_intern.BroCtx_dl_create_func_set)
    __swig_setmethods__["dl_lock_func"] = _broccoli_intern.BroCtx_dl_lock_func_set
    __swig_getmethods__["dl_lock_func"] = _broccoli_intern.BroCtx_dl_lock_func_get
    if _newclass:dl_lock_func = _swig_property(_broccoli_intern.BroCtx_dl_lock_func_get, _broccoli_intern.BroCtx_dl_lock_func_set)
    __swig_setmethods__["dl_free_func"] = _broccoli_intern.BroCtx_dl_free_func_set
    __swig_getmethods__["dl_free_func"] = _broccoli_intern.BroCtx_dl_free_func_get
    if _newclass:dl_free_func = _swig_property(_broccoli_intern.BroCtx_dl_free_func_get, _broccoli_intern.BroCtx_dl_free_func_set)
    def __init__(self, *args): 
        this = _broccoli_intern.new_BroCtx(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _broccoli_intern.delete_BroCtx
    __del__ = lambda self : None;
BroCtx_swigregister = _broccoli_intern.BroCtx_swigregister
BroCtx_swigregister(BroCtx)
cvar = _broccoli_intern.cvar

class BroConnStats(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BroConnStats, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BroConnStats, name)
    __repr__ = _swig_repr
    __swig_setmethods__["tx_buflen"] = _broccoli_intern.BroConnStats_tx_buflen_set
    __swig_getmethods__["tx_buflen"] = _broccoli_intern.BroConnStats_tx_buflen_get
    if _newclass:tx_buflen = _swig_property(_broccoli_intern.BroConnStats_tx_buflen_get, _broccoli_intern.BroConnStats_tx_buflen_set)
    __swig_setmethods__["rx_buflen"] = _broccoli_intern.BroConnStats_rx_buflen_set
    __swig_getmethods__["rx_buflen"] = _broccoli_intern.BroConnStats_rx_buflen_get
    if _newclass:rx_buflen = _swig_property(_broccoli_intern.BroConnStats_rx_buflen_get, _broccoli_intern.BroConnStats_rx_buflen_set)
    def __init__(self, *args): 
        this = _broccoli_intern.new_BroConnStats(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _broccoli_intern.delete_BroConnStats
    __del__ = lambda self : None;
BroConnStats_swigregister = _broccoli_intern.BroConnStats_swigregister
BroConnStats_swigregister(BroConnStats)

class BroString(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BroString, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BroString, name)
    __repr__ = _swig_repr
    __swig_setmethods__["str_len"] = _broccoli_intern.BroString_str_len_set
    __swig_getmethods__["str_len"] = _broccoli_intern.BroString_str_len_get
    if _newclass:str_len = _swig_property(_broccoli_intern.BroString_str_len_get, _broccoli_intern.BroString_str_len_set)
    __swig_setmethods__["str_val"] = _broccoli_intern.BroString_str_val_set
    __swig_getmethods__["str_val"] = _broccoli_intern.BroString_str_val_get
    if _newclass:str_val = _swig_property(_broccoli_intern.BroString_str_val_get, _broccoli_intern.BroString_str_val_set)
    def __init__(self, *args): 
        this = _broccoli_intern.new_BroString(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _broccoli_intern.delete_BroString
    __del__ = lambda self : None;
BroString_swigregister = _broccoli_intern.BroString_swigregister
BroString_swigregister(BroString)

class BroPort(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BroPort, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BroPort, name)
    __repr__ = _swig_repr
    __swig_setmethods__["port_num"] = _broccoli_intern.BroPort_port_num_set
    __swig_getmethods__["port_num"] = _broccoli_intern.BroPort_port_num_get
    if _newclass:port_num = _swig_property(_broccoli_intern.BroPort_port_num_get, _broccoli_intern.BroPort_port_num_set)
    __swig_setmethods__["port_proto"] = _broccoli_intern.BroPort_port_proto_set
    __swig_getmethods__["port_proto"] = _broccoli_intern.BroPort_port_proto_get
    if _newclass:port_proto = _swig_property(_broccoli_intern.BroPort_port_proto_get, _broccoli_intern.BroPort_port_proto_set)
    def __init__(self, *args): 
        this = _broccoli_intern.new_BroPort(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _broccoli_intern.delete_BroPort
    __del__ = lambda self : None;
BroPort_swigregister = _broccoli_intern.BroPort_swigregister
BroPort_swigregister(BroPort)

class BroSubnet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BroSubnet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BroSubnet, name)
    __repr__ = _swig_repr
    __swig_setmethods__["sn_net"] = _broccoli_intern.BroSubnet_sn_net_set
    __swig_getmethods__["sn_net"] = _broccoli_intern.BroSubnet_sn_net_get
    if _newclass:sn_net = _swig_property(_broccoli_intern.BroSubnet_sn_net_get, _broccoli_intern.BroSubnet_sn_net_set)
    __swig_setmethods__["sn_width"] = _broccoli_intern.BroSubnet_sn_width_set
    __swig_getmethods__["sn_width"] = _broccoli_intern.BroSubnet_sn_width_get
    if _newclass:sn_width = _swig_property(_broccoli_intern.BroSubnet_sn_width_get, _broccoli_intern.BroSubnet_sn_width_set)
    def __init__(self, *args): 
        this = _broccoli_intern.new_BroSubnet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _broccoli_intern.delete_BroSubnet
    __del__ = lambda self : None;
BroSubnet_swigregister = _broccoli_intern.BroSubnet_swigregister
BroSubnet_swigregister(BroSubnet)

class BroEvArg(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, BroEvArg, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, BroEvArg, name)
    __repr__ = _swig_repr
    __swig_setmethods__["arg_data"] = _broccoli_intern.BroEvArg_arg_data_set
    __swig_getmethods__["arg_data"] = _broccoli_intern.BroEvArg_arg_data_get
    if _newclass:arg_data = _swig_property(_broccoli_intern.BroEvArg_arg_data_get, _broccoli_intern.BroEvArg_arg_data_set)
    __swig_setmethods__["arg_type"] = _broccoli_intern.BroEvArg_arg_type_set
    __swig_getmethods__["arg_type"] = _broccoli_intern.BroEvArg_arg_type_get
    if _newclass:arg_type = _swig_property(_broccoli_intern.BroEvArg_arg_type_get, _broccoli_intern.BroEvArg_arg_type_set)
    def __init__(self, *args): 
        this = _broccoli_intern.new_BroEvArg(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _broccoli_intern.delete_BroEvArg
    __del__ = lambda self : None;
BroEvArg_swigregister = _broccoli_intern.BroEvArg_swigregister
BroEvArg_swigregister(BroEvArg)

class bro_ev_meta(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, bro_ev_meta, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, bro_ev_meta, name)
    __repr__ = _swig_repr
    __swig_setmethods__["ev_name"] = _broccoli_intern.bro_ev_meta_ev_name_set
    __swig_getmethods__["ev_name"] = _broccoli_intern.bro_ev_meta_ev_name_get
    if _newclass:ev_name = _swig_property(_broccoli_intern.bro_ev_meta_ev_name_get, _broccoli_intern.bro_ev_meta_ev_name_set)
    __swig_setmethods__["ev_ts"] = _broccoli_intern.bro_ev_meta_ev_ts_set
    __swig_getmethods__["ev_ts"] = _broccoli_intern.bro_ev_meta_ev_ts_get
    if _newclass:ev_ts = _swig_property(_broccoli_intern.bro_ev_meta_ev_ts_get, _broccoli_intern.bro_ev_meta_ev_ts_set)
    __swig_setmethods__["ev_numargs"] = _broccoli_intern.bro_ev_meta_ev_numargs_set
    __swig_getmethods__["ev_numargs"] = _broccoli_intern.bro_ev_meta_ev_numargs_get
    if _newclass:ev_numargs = _swig_property(_broccoli_intern.bro_ev_meta_ev_numargs_get, _broccoli_intern.bro_ev_meta_ev_numargs_set)
    __swig_setmethods__["ev_args"] = _broccoli_intern.bro_ev_meta_ev_args_set
    __swig_getmethods__["ev_args"] = _broccoli_intern.bro_ev_meta_ev_args_get
    if _newclass:ev_args = _swig_property(_broccoli_intern.bro_ev_meta_ev_args_get, _broccoli_intern.bro_ev_meta_ev_args_set)
    __swig_setmethods__["ev_start"] = _broccoli_intern.bro_ev_meta_ev_start_set
    __swig_getmethods__["ev_start"] = _broccoli_intern.bro_ev_meta_ev_start_get
    if _newclass:ev_start = _swig_property(_broccoli_intern.bro_ev_meta_ev_start_get, _broccoli_intern.bro_ev_meta_ev_start_set)
    __swig_setmethods__["ev_end"] = _broccoli_intern.bro_ev_meta_ev_end_set
    __swig_getmethods__["ev_end"] = _broccoli_intern.bro_ev_meta_ev_end_get
    if _newclass:ev_end = _swig_property(_broccoli_intern.bro_ev_meta_ev_end_get, _broccoli_intern.bro_ev_meta_ev_end_set)
    def __init__(self, *args): 
        this = _broccoli_intern.new_bro_ev_meta(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _broccoli_intern.delete_bro_ev_meta
    __del__ = lambda self : None;
bro_ev_meta_swigregister = _broccoli_intern.bro_ev_meta_swigregister
bro_ev_meta_swigregister(bro_ev_meta)

class bro_packet(_object):
    __swig_setmethods__ = {}
    __setattr__ = lambda self, name, value: _swig_setattr(self, bro_packet, name, value)
    __swig_getmethods__ = {}
    __getattr__ = lambda self, name: _swig_getattr(self, bro_packet, name)
    __repr__ = _swig_repr
    __swig_setmethods__["pkt_time"] = _broccoli_intern.bro_packet_pkt_time_set
    __swig_getmethods__["pkt_time"] = _broccoli_intern.bro_packet_pkt_time_get
    if _newclass:pkt_time = _swig_property(_broccoli_intern.bro_packet_pkt_time_get, _broccoli_intern.bro_packet_pkt_time_set)
    __swig_setmethods__["pkt_hdr_size"] = _broccoli_intern.bro_packet_pkt_hdr_size_set
    __swig_getmethods__["pkt_hdr_size"] = _broccoli_intern.bro_packet_pkt_hdr_size_get
    if _newclass:pkt_hdr_size = _swig_property(_broccoli_intern.bro_packet_pkt_hdr_size_get, _broccoli_intern.bro_packet_pkt_hdr_size_set)
    __swig_setmethods__["pkt_link_type"] = _broccoli_intern.bro_packet_pkt_link_type_set
    __swig_getmethods__["pkt_link_type"] = _broccoli_intern.bro_packet_pkt_link_type_get
    if _newclass:pkt_link_type = _swig_property(_broccoli_intern.bro_packet_pkt_link_type_get, _broccoli_intern.bro_packet_pkt_link_type_set)
    __swig_setmethods__["pkt_pcap_hdr"] = _broccoli_intern.bro_packet_pkt_pcap_hdr_set
    __swig_getmethods__["pkt_pcap_hdr"] = _broccoli_intern.bro_packet_pkt_pcap_hdr_get
    if _newclass:pkt_pcap_hdr = _swig_property(_broccoli_intern.bro_packet_pkt_pcap_hdr_get, _broccoli_intern.bro_packet_pkt_pcap_hdr_set)
    __swig_setmethods__["pkt_data"] = _broccoli_intern.bro_packet_pkt_data_set
    __swig_getmethods__["pkt_data"] = _broccoli_intern.bro_packet_pkt_data_get
    if _newclass:pkt_data = _swig_property(_broccoli_intern.bro_packet_pkt_data_get, _broccoli_intern.bro_packet_pkt_data_set)
    __swig_setmethods__["pkt_tag"] = _broccoli_intern.bro_packet_pkt_tag_set
    __swig_getmethods__["pkt_tag"] = _broccoli_intern.bro_packet_pkt_tag_get
    if _newclass:pkt_tag = _swig_property(_broccoli_intern.bro_packet_pkt_tag_get, _broccoli_intern.bro_packet_pkt_tag_set)
    def __init__(self, *args): 
        this = _broccoli_intern.new_bro_packet(*args)
        try: self.this.append(this)
        except: self.this = this
    __swig_destroy__ = _broccoli_intern.delete_bro_packet
    __del__ = lambda self : None;
bro_packet_swigregister = _broccoli_intern.bro_packet_swigregister
bro_packet_swigregister(bro_packet)

bro_init = _broccoli_intern.bro_init
bro_ctx_init = _broccoli_intern.bro_ctx_init
bro_conn_new = _broccoli_intern.bro_conn_new
bro_conn_new_str = _broccoli_intern.bro_conn_new_str
bro_conn_new_socket = _broccoli_intern.bro_conn_new_socket
bro_conn_set_class = _broccoli_intern.bro_conn_set_class
bro_conn_get_peer_class = _broccoli_intern.bro_conn_get_peer_class
bro_conn_get_connstats = _broccoli_intern.bro_conn_get_connstats
bro_conn_connect = _broccoli_intern.bro_conn_connect
bro_conn_reconnect = _broccoli_intern.bro_conn_reconnect
bro_conn_delete = _broccoli_intern.bro_conn_delete
bro_conn_alive = _broccoli_intern.bro_conn_alive
bro_conn_adopt_events = _broccoli_intern.bro_conn_adopt_events
bro_conn_get_fd = _broccoli_intern.bro_conn_get_fd
bro_conn_process_input = _broccoli_intern.bro_conn_process_input
bro_conn_data_set = _broccoli_intern.bro_conn_data_set
bro_conn_data_get = _broccoli_intern.bro_conn_data_get
bro_conn_data_del = _broccoli_intern.bro_conn_data_del
bro_event_new = _broccoli_intern.bro_event_new
bro_event_free = _broccoli_intern.bro_event_free
bro_event_add_val = _broccoli_intern.bro_event_add_val
bro_event_set_val = _broccoli_intern.bro_event_set_val
bro_event_send = _broccoli_intern.bro_event_send
bro_event_send_raw = _broccoli_intern.bro_event_send_raw
bro_event_queue_length = _broccoli_intern.bro_event_queue_length
bro_event_queue_length_max = _broccoli_intern.bro_event_queue_length_max
bro_event_queue_flush = _broccoli_intern.bro_event_queue_flush
bro_event_registry_add = _broccoli_intern.bro_event_registry_add
bro_event_registry_add_compact = _broccoli_intern.bro_event_registry_add_compact
bro_event_registry_remove = _broccoli_intern.bro_event_registry_remove
bro_event_registry_request = _broccoli_intern.bro_event_registry_request
bro_buf_new = _broccoli_intern.bro_buf_new
bro_buf_free = _broccoli_intern.bro_buf_free
bro_buf_append = _broccoli_intern.bro_buf_append
bro_buf_consume = _broccoli_intern.bro_buf_consume
bro_buf_reset = _broccoli_intern.bro_buf_reset
bro_buf_get = _broccoli_intern.bro_buf_get
bro_buf_get_end = _broccoli_intern.bro_buf_get_end
bro_buf_get_size = _broccoli_intern.bro_buf_get_size
bro_buf_get_used_size = _broccoli_intern.bro_buf_get_used_size
bro_buf_ptr_get = _broccoli_intern.bro_buf_ptr_get
bro_buf_ptr_tell = _broccoli_intern.bro_buf_ptr_tell
bro_buf_ptr_seek = _broccoli_intern.bro_buf_ptr_seek
bro_buf_ptr_check = _broccoli_intern.bro_buf_ptr_check
bro_buf_ptr_read = _broccoli_intern.bro_buf_ptr_read
bro_buf_ptr_write = _broccoli_intern.bro_buf_ptr_write
bro_conf_set_domain = _broccoli_intern.bro_conf_set_domain
bro_conf_get_int = _broccoli_intern.bro_conf_get_int
bro_conf_get_dbl = _broccoli_intern.bro_conf_get_dbl
bro_conf_get_str = _broccoli_intern.bro_conf_get_str
bro_string_init = _broccoli_intern.bro_string_init
bro_string_set = _broccoli_intern.bro_string_set
bro_string_set_data = _broccoli_intern.bro_string_set_data
bro_string_get_data = _broccoli_intern.bro_string_get_data
bro_string_get_length = _broccoli_intern.bro_string_get_length
bro_string_copy = _broccoli_intern.bro_string_copy
bro_string_assign = _broccoli_intern.bro_string_assign
bro_string_cleanup = _broccoli_intern.bro_string_cleanup
bro_string_free = _broccoli_intern.bro_string_free
bro_record_new = _broccoli_intern.bro_record_new
bro_record_free = _broccoli_intern.bro_record_free
bro_record_get_length = _broccoli_intern.bro_record_get_length
bro_record_add_val = _broccoli_intern.bro_record_add_val
bro_record_get_nth_val = _broccoli_intern.bro_record_get_nth_val
bro_record_get_nth_name = _broccoli_intern.bro_record_get_nth_name
bro_record_get_named_val = _broccoli_intern.bro_record_get_named_val
bro_record_set_nth_val = _broccoli_intern.bro_record_set_nth_val
bro_record_set_named_val = _broccoli_intern.bro_record_set_named_val
bro_table_new = _broccoli_intern.bro_table_new
bro_table_free = _broccoli_intern.bro_table_free
bro_table_insert = _broccoli_intern.bro_table_insert
bro_table_find = _broccoli_intern.bro_table_find
bro_table_get_size = _broccoli_intern.bro_table_get_size
bro_table_foreach = _broccoli_intern.bro_table_foreach
bro_table_get_types = _broccoli_intern.bro_table_get_types
bro_set_new = _broccoli_intern.bro_set_new
bro_set_free = _broccoli_intern.bro_set_free
bro_set_insert = _broccoli_intern.bro_set_insert
bro_set_find = _broccoli_intern.bro_set_find
bro_set_get_size = _broccoli_intern.bro_set_get_size
bro_set_foreach = _broccoli_intern.bro_set_foreach
bro_set_get_type = _broccoli_intern.bro_set_get_type
bro_conn_set_packet_ctxt = _broccoli_intern.bro_conn_set_packet_ctxt
bro_conn_get_packet_ctxt = _broccoli_intern.bro_conn_get_packet_ctxt
bro_packet_new = _broccoli_intern.bro_packet_new
bro_packet_clone = _broccoli_intern.bro_packet_clone
bro_packet_free = _broccoli_intern.bro_packet_free
bro_packet_send = _broccoli_intern.bro_packet_send
bro_util_current_time = _broccoli_intern.bro_util_current_time
bro_util_timeval_to_double = _broccoli_intern.bro_util_timeval_to_double


