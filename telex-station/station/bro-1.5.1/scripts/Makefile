# Makefile.in generated by automake 1.11.1 from Makefile.am.
# scripts/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



pkgdatadir = $(datadir)/bro
pkgincludedir = $(includedir)/bro
pkglibdir = $(libdir)/bro
pkglibexecdir = $(libexecdir)/bro
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
subdir = scripts
DIST_COMMON = README $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/bro.rc.in $(srcdir)/bro_config.in \
	$(srcdir)/localnetMAC.pl.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES = bro_config bro.rc localnetMAC.pl
CONFIG_CLEAN_VPATH_FILES =
SOURCES =
DIST_SOURCES =
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
AM_RECURSIVE_TARGETS = $(RECURSIVE_TARGETS:-recursive=) \
	$(RECURSIVE_CLEAN_TARGETS:-recursive=) tags TAGS ctags CTAGS \
	distdir
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
am__relativize = \
  dir0=`pwd`; \
  sed_first='s,^\([^/]*\)/.*$$,\1,'; \
  sed_rest='s,^[^/]*/*,,'; \
  sed_last='s,^.*/\([^/]*\)$$,\1,'; \
  sed_butlast='s,/*[^/]*$$,,'; \
  while test -n "$$dir1"; do \
    first=`echo "$$dir1" | sed -e "$$sed_first"`; \
    if test "$$first" != "."; then \
      if test "$$first" = ".."; then \
        dir2=`echo "$$dir0" | sed -e "$$sed_last"`/"$$dir2"; \
        dir0=`echo "$$dir0" | sed -e "$$sed_butlast"`; \
      else \
        first2=`echo "$$dir2" | sed -e "$$sed_first"`; \
        if test "$$first2" = "$$first"; then \
          dir2=`echo "$$dir2" | sed -e "$$sed_rest"`; \
        else \
          dir2="../$$dir2"; \
        fi; \
        dir0="$$dir0"/"$$first"; \
      fi; \
    fi; \
    dir1=`echo "$$dir1" | sed -e "$$sed_rest"`; \
  done; \
  reldir="$$dir2"
ACLOCAL = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run tar
AUTOCONF = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run automake-1.11
AWK = mawk
BINPAC = ${top_builddir}/aux/binpac/src/binpac
BROHOST = bro-earth-orbit
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -I/include -I/usr/include
CHOWN = /bin/chown
COMPRESS = gzip
CPP = gcc -E
CPPFLAGS =   -I${top_srcdir}/linux-include
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
HOST_BIGENDIAN = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lz -lpcap -lpcap  -lssl -lcrypto -lpcap -lresolv -ltermcap -ltermcap
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NBDNS = nb_dns.o
OBJEXT = o
PACKAGE = bro
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
SHLICC2 = 
STRIP = 
VERSION = 1.5.1
V_CCOPT = -O
V_INCLS =  -I${top_srcdir}/linux-include
WANT_DAG_OBJ = 
YACC = bison -y
YFLAGS = 
abs_builddir = /home/ewust/telex-station/station/bro-1.5.1/scripts
abs_srcdir = /home/ewust/telex-station/station/bro-1.5.1/scripts
abs_top_builddir = /home/ewust/telex-station/station/bro-1.5.1
abs_top_srcdir = /home/ewust/telex-station/station/bro-1.5.1
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_python = yes
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local/bro
program_transform_name = s,x,x,
psdir = ${docdir}
pybin = /usr/bin/python
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  aux/broccoli aux/binpac aux/broctl/aux/capstats
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
bro_bin = ${prefix}/bin
bro_logs = ${prefix}/logs
bro_etc = ${prefix}/etc
bro_site = ${prefix}/site
bro_scripts = ${prefix}/scripts
bro_reports = ${prefix}/reports
bro_perlmods = ${prefix}/perl

# where to download signatures from.
SIGHOST = www.bro-ids.org

# whats our name ..
brohost = bro-earth-orbit
SUBDIRS = s2b

# these files need to be in the distribution
EXTRA_DIST = bro.cfg.example  bro_config.in  alert_scores  bro.rc.in \
	bro.rc-hooks.sh  bro_log_compress.sh  install_cron.sh \
	local.site.bro.default  localnetMAC.pl.in \
	mail_notice.sh  mail_reports.sh \
	make-ftp-safe-vocabulary.awk  IP4.pm signature_scores \
	perl local.lite.bro \
	alert_scores signature_scores \
	bro_log_compress.sh \
	frontend-mail-reports.sh frontend-site-report.sh push_logs.sh mail_notice.sh


# this cleans up some genereated files
MOSTLYCLEAN = bro.rc bro.cfg bro_config intern.bro bro_user_id bro_user_id.bak \
			  localnetMAC.pl local.site.bro

scoredir = $(prefix)/etc
scriptsdir = $(prefix)/scripts
all: all-recursive

.SUFFIXES:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu scripts/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu scripts/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
bro_config: $(top_builddir)/config.status $(srcdir)/bro_config.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
bro.rc: $(top_builddir)/config.status $(srcdir)/bro.rc.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@
localnetMAC.pl: $(top_builddir)/config.status $(srcdir)/localnetMAC.pl.in
	cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@fail= failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || ($(am__cd) $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      set "$$@" "$$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	  fi; \
	done
	@list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    dir1=$$subdir; dir2="$(distdir)/$$subdir"; \
	    $(am__relativize); \
	    new_distdir=$$reldir; \
	    dir1=$$subdir; dir2="$(top_distdir)"; \
	    $(am__relativize); \
	    new_top_distdir=$$reldir; \
	    echo " (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) top_distdir="$$new_top_distdir" distdir="$$new_distdir" \\"; \
	    echo "     am__remove_distdir=: am__skip_length_check=: am__skip_mode_fix=: distdir)"; \
	    ($(am__cd) $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$new_top_distdir" \
	        distdir="$$new_distdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
		am__skip_mode_fix=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile
installdirs: installdirs-recursive
installdirs-am:
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-generic mostlyclean-am

distclean: distclean-recursive
	-rm -f Makefile
distclean-am: clean-am distclean-generic distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

html-am:

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-dvi-am:

install-exec-am:

install-html: install-html-recursive

install-html-am:

install-info: install-info-recursive

install-info-am:

install-man:

install-pdf: install-pdf-recursive

install-pdf-am:

install-ps: install-ps-recursive

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-generic

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-local

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) ctags-recursive \
	install-am install-strip tags-recursive

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-generic ctags \
	ctags-recursive distclean distclean-generic distclean-tags \
	distdir dvi dvi-am html html-am info info-am install \
	install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-generic pdf pdf-am ps ps-am tags \
	tags-recursive uninstall uninstall-am uninstall-local


# just update dist files, not the site file
# and ask me no questions, I'll tell you no ..
update: 
	$(MAKE) install_default_files

# install brolite
install-brolite: 
	- $(INSTALL) -d /usr/local/etc/rc.d/
	$(MAKE) create_dirs

	$(INSTALL) $(srcdir)/alert_scores $(scoredir)/alert_scores
	$(INSTALL) $(srcdir)/signature_scores $(scoredir)/signature_scores
	$(INSTALL) $(srcdir)/bro_log_compress.sh  $(bro_scripts)/bro_log_compress.sh
	$(INSTALL) $(srcdir)/frontend-mail-reports.sh  $(bro_scripts)/frontend-mail-reports.sh
	$(INSTALL) $(srcdir)/frontend-site-report.sh  $(bro_scripts)/frontend-site-report.sh
	$(INSTALL) $(srcdir)/push_logs.sh  $(bro_scripts)/push_logs.sh
	$(INSTALL) $(srcdir)/mail_notice.sh $(bro_scripts)/mail_notice.sh
	$(INSTALL) $(srcdir)/s2b/example_bro_files/signatures.sig $(prefix)/site
	$(INSTALL) $(srcdir)/s2b/bro-include/sig-addendum.sig $(datadir)/bro
	$(INSTALL) $(srcdir)/s2b/bro-include/sig-functions.bro $(datadir)/bro
	$(INSTALL) $(srcdir)/s2b/example_bro_files/sig-action.bro $(datadir)/bro

# install perl libraries and executables
install_perl_scripts:
	@if ! ${PERL} -e 'exit ($] >= 5.006001)' > /dev/null 2>&1; then \
		(cd perl && $(PERL) Makefile.PL INSTALLSCRIPT=$(bro_scripts) BROCONFIG=$(prefix)/etc/bro.cfg PREFIX=$(bro_perlmods); $(MAKE) ; $(MAKE) install) ; \
	else \
		echo "*************************************************" ; \
		echo "* Need newer version of perl to install reports *" ; \
		echo "*    and other supporting perl based tools.     *" ; \
		echo "*************************************************" ; \
	fi
# clean up the mess we made
uninstall-local:
	rm -f $(bro_scripts)/mail_reports.sh
	rm -f $(bro_scripts)/bro_log_compress.sh
	rm -f $(bro_scripts)/bro_config
	rm -f $(bro_etc)/bro.rc
	rm -f $(bro_etc)/bro.cfg
	rm -f $(bro_etc)/bro.cfg.example
	rm -f $(prefix)/etc/bro.rc-hooks.sh
	rm -f  $(prefix)/site/local.site.bro
	rm -f  $(prefix)/site/${brohost}.bro
	$(srcdir)/install_cron.sh uninstall
	-rm -f $(prefix)/etc/bro.rc-hooks.sh.new 
	-rm -f /usr/local/etc/rc.d/bro.sh

# install the stuff to do reports
reports:
	$(INSTALL) -d $(bro_scripts)
	$(INSTALL) -d $(bro_etc)
	(cd s2b && $(MAKE) all)
	(cd s2b && $(MAKE) install)
	@./bro_config
	$(INSTALL_DATA) bro.cfg  $(bro_etc)/bro.cfg
	$(INSTALL) $(srcdir)/mail_reports.sh $(bro_scripts)/mail_reports.sh
	$(INSTALL) $(srcdir)/bro_log_compress.sh $(bro_scripts)/bro_log_compress.sh
	$(INSTALL) $(srcdir)/frontend-mail-reports.sh $(bro_scripts)/frontend-mail-reports.sh
	$(INSTALL) $(srcdir)/frontend-site-report.sh $(bro_scripts)/frontend-site-report.sh
	$(INSTALL) $(srcdir)/push_logs.sh  $(bro_scripts)/push_logs.sh
	$(MAKE) install_perl_scripts

# update the signature file in $BROHOME/site, don't clobber it!
update-sigs:
	@echo "Getting signature file from $(SIGHOST)" 
	- wget http://$(SIGHOST)/download/signatures.sig -O signatures.sig.new  -o /dev/null 
	@if [ ! -s signatures.sig.new ] ; then \
		echo "Error in download. Try again later." ; \
	else \
		if [ ! -f $(prefix)/site/signatures.sig ] ; then  \
			echo "No previous version, installing new version." ; \
			cp signatures.sig.new $(prefix)/site/signatures.sig ; \
		else \
			cp signatures.sig.new $(prefix)/site/signatures.sig.new ; \
			echo "***********************************************************" ; \
			echo "A new signature file (signatures.sig.new) has been placed in" ; \
			echo "$(prefix)/site. Please compare it to your current signatures.sig " ; \
			echo "and copy it over if there are no significant differences." ; \
			echo "***********************************************************" ; \
		fi \
	fi

create_dirs:
	- $(INSTALL) -d $(bro_bin)
	$(INSTALL) -d $(bro_etc)
	$(INSTALL) -d $(bro_logs)
	$(INSTALL) -d $(bro_site)
	$(INSTALL) -d $(bro_scripts)
	$(INSTALL) -d $(bro_reports)

# these are files that SHOULD NOT be updated and are site specific
install_local_files:
	@if [ ! -f ${bro_site}/local.site.bro ] ; then                \
		echo "Installing local.site.bro ..." ;                           \
		if [ ! -f local.site.bro ]; then                      \
			$(INSTALL_DATA) local.site.bro.default $(bro_site)/local.site.bro ; \
		else \
			$(INSTALL_DATA) local.site.bro $(bro_site)/local.site.bro ; \
		fi \
	else \
		if [ -f local.site.bro ]; then                      \
			$(INSTALL_DATA) local.site.bro $(bro_site)/local.site.bro.new ; \
		fi \
	fi
	@if [ ! -f ${bro_site}/${brohost}.bro ] ; then                 \
		echo "Installing ${brohost}.bro ..." ;                             \
		$(INSTALL_DATA) $(srcdir)/local.lite.bro $(bro_site)/${brohost}.bro ;   \
	else \
		$(INSTALL_DATA) $(srcdir)/local.lite.bro $(bro_site)/${brohost}.bro.new ;   \
	fi
	@if [ ! -f $(prefix)/etc/bro.rc-hooks.sh ] ; then              \
		$(INSTALL_DATA) $(srcdir)/bro.rc-hooks.sh $(prefix)/etc/bro.rc-hooks.sh ;   \
	else \
		$(INSTALL_DATA) $(srcdir)/bro.rc-hooks.sh $(prefix)/etc/bro.rc-hooks.sh.new ; \
	fi

# Default files that can be installed/reinstalled, not site specific
install_default_files:
	$(INSTALL) $(srcdir)/mail_reports.sh $(bro_scripts)/mail_reports.sh
	$(INSTALL) bro.rc $(prefix)/etc/bro.rc
	$(INSTALL) bro_config  $(prefix)/scripts/bro_config
	-$(INSTALL_DATA) bro.cfg  $(bro_etc)/bro.cfg
	$(INSTALL_DATA) $(srcdir)/bro.cfg.example $(bro_etc)/bro.cfg.example
	- $(INSTALL) bro.rc /usr/local/etc/rc.d/bro.sh
	(cd s2b ; $(MAKE) install)

# install cron file
install_cron:
	$(srcdir)/install_cron.sh install

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
