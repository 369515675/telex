# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



#
#  Copyright (c) 1997-2005
#	The Regents of the University of California.  All rights reserved.
#
#  Redistribution and use in source and binary forms, with or without
#  modification, are permitted provided that: (1) source code distributions
#  retain the above copyright notice and this paragraph in its entirety, (2)
#  distributions including binary code include the above copyright notice and
#  this paragraph in its entirety in the documentation or other materials
#  provided with the distribution, and (3) all advertising materials mentioning
#  features or use of this software display the following acknowledgement:
#  ``This product includes software developed by the University of California,
#  Lawrence Berkeley Laboratory and its contributors.'' Neither the name of
#  the University nor the names of its contributors may be used to endorse
#  or promote products derived from this software without specific prior
#  written permission.
#  THIS SOFTWARE IS PROVIDED ``AS IS'' AND WITHOUT ANY EXPRESS OR IMPLIED
#  WARRANTIES, INCLUDING, WITHOUT LIMITATION, THE IMPLIED WARRANTIES OF
#  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
#
#  $Id: Makefile.am 6588 2009-02-17 00:02:53Z vern $
#
#



pkgdatadir = $(datadir)/bro
pkgincludedir = $(includedir)/bro
pkglibdir = $(libdir)/bro
pkglibexecdir = $(libexecdir)/bro
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
target_triplet = x86_64-unknown-linux-gnu
noinst_PROGRAMS = bifcl$(EXEEXT)
bin_PROGRAMS = bro$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS) $(noinst_PROGRAMS)
am_bifcl_OBJECTS = bif_lex.$(OBJEXT) bif_parse.$(OBJEXT) \
	bif_arg.$(OBJEXT)
bifcl_OBJECTS = $(am_bifcl_OBJECTS)
bifcl_LDADD = $(LDADD)
am__bro_SOURCES_DIST = main.cc net_util.cc util.cc parse.cc scan.cc \
	re-parse.cc re-scan.cc rule-parse.cc rule-scan.cc Active.cc \
	Analyzer.cc Anon.cc ARP.cc Attr.cc BackDoor.cc Base64.cc \
	BitTorrent.cc BitTorrentTracker.cc BPF_Program.cc BroString.cc \
	CCL.cc ChunkedIO.cc CompHash.cc Conn.cc ConnCompressor.cc \
	ContentLine.cc DCE_RPC.cc DFA.cc DHCP-binpac.cc DNS.cc \
	DNS-binpac.cc DNS_Mgr.cc DbgBreakpoint.cc DbgHelp.cc \
	DbgWatch.cc Debug.cc DebugCmds.cc DebugLogger.cc Desc.cc \
	Dict.cc Discard.cc DPM.cc EquivClass.cc Event.cc \
	EventHandler.cc EventLauncher.cc EventRegistry.cc Expr.cc \
	FTP.cc File.cc FileAnalyzer.cc Finger.cc FlowSrc.cc Frag.cc \
	Frame.cc Func.cc Gnutella.cc HTTP.cc HTTP-binpac.cc Hash.cc \
	ICMP.cc ID.cc Ident.cc IntSet.cc InterConn.cc IOSource.cc \
	IRC.cc List.cc Logger.cc Login.cc MIME.cc NCP.cc NFA.cc NFS.cc \
	NTP.cc NVT.cc Net.cc NetVar.cc NetbiosSSN.cc Obj.cc \
	OSFinger.cc PacketFilter.cc PacketSort.cc \
	PersistenceSerializer.cc PktDagSrc.cc PktSrc.cc PIA.cc \
	PolicyFile.cc POP3.cc Portmap.cc PrefixTable.cc \
	PriorityQueue.cc Queue.cc RE.cc RPC.cc Reassem.cc \
	RemoteSerializer.cc Rlogin.cc RSH.cc Rule.cc RuleAction.cc \
	RuleCondition.cc RuleMatcher.cc ScriptAnaly.cc \
	SmithWaterman.cc SMB.cc SMTP.cc SSH.cc SSL-binpac.cc Scope.cc \
	SerializationFormat.cc SerialObj.cc Serializer.cc Sessions.cc \
	StateAccess.cc Stats.cc SteppingStone.cc Stmt.cc TCP.cc \
	TCP_Endpoint.cc TCP_Reassembler.cc TCP_Rewriter.cc Telnet.cc \
	Timer.cc Traverse.cc Trigger.cc TwoWise.cc Type.cc UDP.cc \
	Val.cc Var.cc XDR.cc ZIP.cc bsd-getopt-long.c cq.c md5.c \
	patricia.c setsignal.c version.c UDP_Rewriter.cc \
	DNS_Rewriter.cc PacketDumper.cc Rewriter.cc strsep.c nb_dns.c \
	malloc.c X509.cc SSLCiphers.cc SSLInterpreter.cc SSLProxy.cc \
	SSLv2.cc SSLv3.cc SSLv3Automaton.cc ssl_api.c tag.c \
	ptwist168.c telex_tcp.c telex_block_flow.c telex_util.c
am__objects_1 = nb_dns.$(OBJEXT)
#am__objects_2 = malloc.$(OBJEXT)
am__objects_3 = X509.$(OBJEXT) SSLCiphers.$(OBJEXT) \
	SSLInterpreter.$(OBJEXT) SSLProxy.$(OBJEXT) \
	SSLv2.$(OBJEXT) SSLv3.$(OBJEXT) \
	SSLv3Automaton.$(OBJEXT)
am__objects_4 = ssl_api.$(OBJEXT) tag.$(OBJEXT) ptwist168.$(OBJEXT) \
	telex_tcp.$(OBJEXT) telex_block_flow.$(OBJEXT) \
	telex_util.$(OBJEXT)
am_bro_OBJECTS = main.$(OBJEXT) net_util.$(OBJEXT) util.$(OBJEXT) \
	parse.$(OBJEXT) scan.$(OBJEXT) re-parse.$(OBJEXT) \
	re-scan.$(OBJEXT) rule-parse.$(OBJEXT) rule-scan.$(OBJEXT) \
	Active.$(OBJEXT) Analyzer.$(OBJEXT) Anon.$(OBJEXT) \
	ARP.$(OBJEXT) Attr.$(OBJEXT) BackDoor.$(OBJEXT) \
	Base64.$(OBJEXT) BitTorrent.$(OBJEXT) \
	BitTorrentTracker.$(OBJEXT) BPF_Program.$(OBJEXT) \
	BroString.$(OBJEXT) CCL.$(OBJEXT) ChunkedIO.$(OBJEXT) \
	CompHash.$(OBJEXT) Conn.$(OBJEXT) ConnCompressor.$(OBJEXT) \
	ContentLine.$(OBJEXT) DCE_RPC.$(OBJEXT) DFA.$(OBJEXT) \
	DHCP-binpac.$(OBJEXT) DNS.$(OBJEXT) DNS-binpac.$(OBJEXT) \
	DNS_Mgr.$(OBJEXT) DbgBreakpoint.$(OBJEXT) DbgHelp.$(OBJEXT) \
	DbgWatch.$(OBJEXT) Debug.$(OBJEXT) DebugCmds.$(OBJEXT) \
	DebugLogger.$(OBJEXT) Desc.$(OBJEXT) Dict.$(OBJEXT) \
	Discard.$(OBJEXT) DPM.$(OBJEXT) EquivClass.$(OBJEXT) \
	Event.$(OBJEXT) EventHandler.$(OBJEXT) EventLauncher.$(OBJEXT) \
	EventRegistry.$(OBJEXT) Expr.$(OBJEXT) FTP.$(OBJEXT) \
	File.$(OBJEXT) FileAnalyzer.$(OBJEXT) Finger.$(OBJEXT) \
	FlowSrc.$(OBJEXT) Frag.$(OBJEXT) Frame.$(OBJEXT) \
	Func.$(OBJEXT) Gnutella.$(OBJEXT) HTTP.$(OBJEXT) \
	HTTP-binpac.$(OBJEXT) Hash.$(OBJEXT) ICMP.$(OBJEXT) \
	ID.$(OBJEXT) Ident.$(OBJEXT) IntSet.$(OBJEXT) \
	InterConn.$(OBJEXT) IOSource.$(OBJEXT) IRC.$(OBJEXT) \
	List.$(OBJEXT) Logger.$(OBJEXT) Login.$(OBJEXT) MIME.$(OBJEXT) \
	NCP.$(OBJEXT) NFA.$(OBJEXT) NFS.$(OBJEXT) NTP.$(OBJEXT) \
	NVT.$(OBJEXT) Net.$(OBJEXT) NetVar.$(OBJEXT) \
	NetbiosSSN.$(OBJEXT) Obj.$(OBJEXT) OSFinger.$(OBJEXT) \
	PacketFilter.$(OBJEXT) PacketSort.$(OBJEXT) \
	PersistenceSerializer.$(OBJEXT) PktDagSrc.$(OBJEXT) \
	PktSrc.$(OBJEXT) PIA.$(OBJEXT) PolicyFile.$(OBJEXT) \
	POP3.$(OBJEXT) Portmap.$(OBJEXT) PrefixTable.$(OBJEXT) \
	PriorityQueue.$(OBJEXT) Queue.$(OBJEXT) RE.$(OBJEXT) \
	RPC.$(OBJEXT) Reassem.$(OBJEXT) RemoteSerializer.$(OBJEXT) \
	Rlogin.$(OBJEXT) RSH.$(OBJEXT) Rule.$(OBJEXT) \
	RuleAction.$(OBJEXT) RuleCondition.$(OBJEXT) \
	RuleMatcher.$(OBJEXT) ScriptAnaly.$(OBJEXT) \
	SmithWaterman.$(OBJEXT) SMB.$(OBJEXT) SMTP.$(OBJEXT) \
	SSH.$(OBJEXT) SSL-binpac.$(OBJEXT) Scope.$(OBJEXT) \
	SerializationFormat.$(OBJEXT) SerialObj.$(OBJEXT) \
	Serializer.$(OBJEXT) Sessions.$(OBJEXT) StateAccess.$(OBJEXT) \
	Stats.$(OBJEXT) SteppingStone.$(OBJEXT) Stmt.$(OBJEXT) \
	TCP.$(OBJEXT) TCP_Endpoint.$(OBJEXT) TCP_Reassembler.$(OBJEXT) \
	TCP_Rewriter.$(OBJEXT) Telnet.$(OBJEXT) Timer.$(OBJEXT) \
	Traverse.$(OBJEXT) Trigger.$(OBJEXT) TwoWise.$(OBJEXT) \
	Type.$(OBJEXT) UDP.$(OBJEXT) Val.$(OBJEXT) Var.$(OBJEXT) \
	XDR.$(OBJEXT) ZIP.$(OBJEXT) bsd-getopt-long.$(OBJEXT) \
	cq.$(OBJEXT) md5.$(OBJEXT) patricia.$(OBJEXT) \
	setsignal.$(OBJEXT) version.$(OBJEXT) UDP_Rewriter.$(OBJEXT) \
	DNS_Rewriter.$(OBJEXT) PacketDumper.$(OBJEXT) \
	Rewriter.$(OBJEXT) strsep.$(OBJEXT) $(am__objects_1) \
	$(am__objects_2) $(am__objects_3) $(am__objects_4)
am__objects_5 = binpac-lib_pac.$(OBJEXT) binpac_bro-lib_pac.$(OBJEXT) \
	bittorrent_pac.$(OBJEXT) dce_rpc_pac.$(OBJEXT) \
	dce_rpc_simple_pac.$(OBJEXT) dhcp_pac.$(OBJEXT) \
	dns_pac.$(OBJEXT) dns_tcp_pac.$(OBJEXT) http_pac.$(OBJEXT) \
	ncp_pac.$(OBJEXT) netflow_pac.$(OBJEXT) rpc_pac.$(OBJEXT) \
	smb_pac.$(OBJEXT) ssl_pac.$(OBJEXT) \
	ssl-record-layer_pac.$(OBJEXT)
am__objects_6 = $(am__objects_5)
am__objects_7 =
am__objects_8 = $(am__objects_7)
nodist_bro_OBJECTS = $(am__objects_6) $(am__objects_8)
bro_OBJECTS = $(am_bro_OBJECTS) $(nodist_bro_OBJECTS)
am__DEPENDENCIES_1 =
bro_DEPENDENCIES = $(am__DEPENDENCIES_1)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
SOURCES = $(bifcl_SOURCES) $(bro_SOURCES) $(EXTRA_bro_SOURCES) \
	$(nodist_bro_SOURCES)
DIST_SOURCES = $(bifcl_SOURCES) $(am__bro_SOURCES_DIST) \
	$(EXTRA_bro_SOURCES)
HEADERS = $(noinst_HEADERS)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run aclocal-1.11
AMTAR = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run tar
AUTOCONF = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run autoconf
AUTOHEADER = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run autoheader
AUTOMAKE = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run automake-1.11
AWK = mawk
BINPAC = ${top_builddir}/aux/binpac/src/binpac
BROHOST = bro-earth-orbit
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -I/include -I/usr/include
CHOWN = /bin/chown
COMPRESS = gzip
CPP = gcc -E
CPPFLAGS =   -I${top_srcdir}/linux-include
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
GREP = /bin/grep
HOST_BIGENDIAN = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s

# Should use AM_ vars, but automake 1.5 errors out.
#AM_LDFLAGS =  
LDFLAGS = 
LEX = flex
LEXLIB = -lfl
LEX_OUTPUT_ROOT = lex.yy
LIBOBJS = 
LIBS = -lz -lpcap -lpcap  -lssl -lcrypto -lpcap -lresolv -ltermcap -ltermcap
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NBDNS = nb_dns.o
OBJEXT = o
PACKAGE = bro
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_URL = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
PERL = /usr/bin/perl
RANLIB = ranlib
SET_MAKE = 
SHELL = /bin/bash
SHLICC2 = 
STRIP = 
VERSION = 1.5.1
V_CCOPT = -O
V_INCLS =  -I${top_srcdir}/linux-include
WANT_DAG_OBJ = 
YACC = bison -y
YFLAGS = -d -t -v
abs_builddir = /home/ewust/telex-station/station/bro-1.5.1/src
abs_srcdir = /home/ewust/telex-station/station/bro-1.5.1/src
abs_top_builddir = /home/ewust/telex-station/station/bro-1.5.1
abs_top_srcdir = /home/ewust/telex-station/station/bro-1.5.1
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
have_python = yes
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/ewust/telex-station/station/bro-1.5.1/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local/bro
program_transform_name = s,x,x,
psdir = ${docdir}
pybin = /usr/bin/python
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
subdirs =  aux/broccoli aux/binpac aux/broctl/aux/capstats
sysconfdir = ${prefix}/etc
target = x86_64-unknown-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = unknown
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
bifcl_SOURCES = bif_lex.cc bif_parse.cc bif_arg.cc
BINPAC_SRC = binpac-lib.pac binpac_bro-lib.pac bittorrent.pac \
	dce_rpc.pac dce_rpc_simple.pac dhcp.pac dns.pac \
	dns_tcp.pac http.pac ncp.pac netflow.pac rpc.pac smb.pac \
	ssl.pac ssl-record-layer.pac

BINPAC_H = $(BINPAC_SRC:.pac=_pac.h)
BINPAC_CC = $(BINPAC_SRC:.pac=_pac.cc)
BINPAC_AUXSRC = binpac.pac bro.pac binpac_bro.h
BINPAC_RPC_AUXSRC = \
	bittorrent-protocol.pac bittorrent-analyzer.pac \
	dce_rpc-analyzer.pac dce_rpc-protocol.pac \
	dhcp-analyzer.pac dhcp-protocol.pac \
	dns-analyzer.pac dns-protocol.pac \
	epmapper.pac \
	http-analyzer.pac http-protocol.pac http.pac \
	netflow-protocol.pac netflow-analyzer.pac \
	portmap-protocol.pac portmap-analyzer.pac \
	rpc-protocol.pac rpc-analyzer.pac \
	smb-protocol.pac smb-mailslot.pac smb-pipe.pac \
	ssl.pac ssl-analyzer.pac ssl-defs.pac \
	ssl-protocol.pac ssl-record-layer.pac

BINPAC_FLAGS = -d $(top_builddir)/src -I $(srcdir)
LIBBINPAC = $(top_builddir)/aux/binpac/lib/libbinpac.a
LIBBINPAC_LIBS = -L$(top_builddir)/aux/binpac/lib -lbinpac
LIBGMP_LIBS = -lgmp

# File locking helper to synchronize targets in parallel builds
LOCK_FILE = $(top_builddir)/aux/scripts/lock_file

# List all optionally built source files here.
EXTRA_bro_SOURCES = X509.cc SSLCiphers.cc SSLInterpreter.cc SSLProxy.cc \
	SSLv2.cc SSLv3.cc SSLv3Automaton.cc nb_dns.c malloc.c

dns_srcs = nb_dns.c
openssl_srcs = X509.cc SSLCiphers.cc SSLInterpreter.cc SSLProxy.cc \
	SSLv2.cc SSLv3.cc SSLv3Automaton.cc


# this is much faster on FreeBSD
#malloc_srcs = malloc.c
telex_srcs = ssl_api.c tag.c ptwist168.c telex_tcp.c telex_block_flow.c telex_util.c

# Forces libedit, bifcl and all generated files to be done first.
# NOTE: Order does matter here, bifcl needs to be before the generated files
# to be correct, the generated files should depend on bifcl, but this causes
# the whole tree to be rebuilt in some cases.
#
# Binpac handling: the main .pac files are explicitly listed in BINPAC_SRC,
# with implicit lists for the corresponding _pac.cc/_pac.h files. We do not
# list the _pac.cc files in bro_SOURCES, since then they'd become part of
# DISTFILES and distcheck would try to build them before binpac exists.
# (This would still work on a previously built tree, but not on a fresh
# checkout.)  To mark the _pac.cc/_pac.h files as sources and ensure the
# resulting object files are linked in, we use nodist_bro_SOURCES. Finally,
# to ensure they're built first, we also list the _pac.cc files in
# BUILT_SOURCES. --cpk
#
BUILT_SOURCES = bifcl $(BIF_FUNC_H) \
	DebugCmdInfoConstants.cc DebugCmdConstants.h \
	$(BINPAC_CC)

EXTRA_DIST = $(BIFS) SMB_COM.def SMTP_cmd.def \
	POP3_cmd.def bif_type.def builtin-func.y parse.y re-parse.y rule-parse.y \
	make_parser.pl make_dbg_constants.pl parse.in scan.l \
	re-scan.l rule-scan.l builtin-func.l DebugCmdInfoConstants.in \
	$(BINPAC_SRC) $(BINPAC_AUXSRC) $(BINPAC_RPC_AUXSRC)

nodist_bro_SOURCES = $(BINPAC_CC) $(BINPAC_H)
bro_SOURCES = \
	main.cc net_util.cc util.cc \
	parse.cc scan.cc re-parse.cc re-scan.cc rule-parse.cc rule-scan.cc \
	Active.cc Analyzer.cc Anon.cc ARP.cc Attr.cc \
	BackDoor.cc Base64.cc BitTorrent.cc BitTorrentTracker.cc \
	BPF_Program.cc BroString.cc \
	CCL.cc ChunkedIO.cc CompHash.cc Conn.cc ConnCompressor.cc \
	ContentLine.cc DCE_RPC.cc DFA.cc \
	DHCP-binpac.cc DNS.cc DNS-binpac.cc DNS_Mgr.cc \
	DbgBreakpoint.cc DbgHelp.cc DbgWatch.cc Debug.cc \
	DebugCmds.cc DebugLogger.cc Desc.cc Dict.cc Discard.cc DPM.cc \
	EquivClass.cc Event.cc EventHandler.cc EventLauncher.cc \
	EventRegistry.cc \
	Expr.cc FTP.cc File.cc FileAnalyzer.cc Finger.cc FlowSrc.cc Frag.cc \
	Frame.cc Func.cc Gnutella.cc HTTP.cc HTTP-binpac.cc Hash.cc ICMP.cc \
	ID.cc Ident.cc IntSet.cc InterConn.cc IOSource.cc IRC.cc \
	List.cc Logger.cc Login.cc MIME.cc \
	NCP.cc NFA.cc NFS.cc NTP.cc NVT.cc Net.cc NetVar.cc \
	NetbiosSSN.cc Obj.cc OSFinger.cc \
	PacketFilter.cc PacketSort.cc PersistenceSerializer.cc \
	PktDagSrc.cc PktSrc.cc PIA.cc \
	PolicyFile.cc POP3.cc Portmap.cc PrefixTable.cc PriorityQueue.cc \
	Queue.cc RE.cc RPC.cc Reassem.cc RemoteSerializer.cc Rlogin.cc RSH.cc \
	Rule.cc RuleAction.cc RuleCondition.cc RuleMatcher.cc \
	ScriptAnaly.cc SmithWaterman.cc SMB.cc SMTP.cc \
	SSH.cc SSL-binpac.cc \
	Scope.cc SerializationFormat.cc SerialObj.cc Serializer.cc \
	Sessions.cc StateAccess.cc Stats.cc SteppingStone.cc Stmt.cc \
	TCP.cc TCP_Endpoint.cc TCP_Reassembler.cc TCP_Rewriter.cc \
	Telnet.cc Timer.cc Traverse.cc Trigger.cc TwoWise.cc Type.cc UDP.cc \
	Val.cc Var.cc XDR.cc ZIP.cc \
	bsd-getopt-long.c cq.c md5.c patricia.c setsignal.c version.c \
	UDP_Rewriter.cc DNS_Rewriter.cc PacketDumper.cc Rewriter.cc \
	strsep.c $(dns_srcs) $(malloc_srcs) $(openssl_srcs) $(telex_srcs)

noinst_HEADERS = Active.h Analyzer.h AnalyzerTags.h Anon.h ARP.h Attr.h \
	BPF_Program.h BackDoor.h Base64.h BitTorrent.h BitTorrentTracker.h \
	BroList.h BroString.h \
	CCL.h ChunkedIO.h CompHash.h Conn.h ConnCompressor.h ContentLine.h \
	Continuation.h DCE_RPC.h DFA.h \
	DHCP-binpac.h DNS.h DNS-binpac.h DNS_Mgr.h \
	DbgBreakpoint.h DbgDisplay.h DbgWatch.h Debug.h \
	DebugCmds.h DebugLogger.h Desc.h Dict.h DPM.h \
	Discard.h EquivClass.h Event.h EventHandler.h EventLauncher.h \
	EventRegistry.h Expr.h FTP.h File.h FileAnalyzer.h \
	Finger.h FlowSrc.h Frag.h Frame.h Func.h Gnutella.h \
	H3.h HTTP.h HTTP-binpac.h Hash.h ICMP.h ID.h IP.h Ident.h \
	IntSet.h InterConn.h IOSource.h IRC.h List.h Logger.h \
	Login.h MIME.h NCP.h NFA.h NFS.h NTP.h NVT.h Net.h NetVar.h \
	NetbiosSSN.h Obj.h OSFinger.h Op.h \
	PacketFilter.h PacketSort.h PersistenceSerializer.h \
	PktDagSrc.h PktSrc.h PIA.h \
	PolicyFile.h POP3.h Portmap.h PrefixTable.h PriorityQueue.h \
	Queue.h RE.h \
	RPC.h Reassem.h RemoteSerializer.h Rlogin.h RSH.h Rule.h RuleAction.h \
	RuleCondition.h RuleMatcher.h \
	ScriptAnaly.h SmithWaterman.h SMB.h SMTP.h \
	SSL-binpac.h SSH.h SSLCiphers.h SSLDefines.h \
	SSLInterpreter.h SSLProxy.h SSLv2.h SSLv3.h SSLv3Automaton.h Scope.h \
	SerialInfo.h SerialObj.h SerialTypes.h \
	SerializationFormat.h Serializer.h Sessions.h StateAccess.h \
	Stats.h SteppingStone.h Stmt.h StmtEnums.h \
	TCP.h TCP_Endpoint.h TCP_Reassembler.h TCP_Rewriter.h Telnet.h Timer.h \
	Traverse.h TraverseTypes.h Trigger.h TwoWise.h Type.h UDP.h \
	Val.h Var.h X509.h XDR.h ZIP.h \
	bif_arg.h bif_parse.h broparse.h bsd-getopt-long.h cq.h input.h md5.h \
	nb_dns.h net_util.h patricia.h re-parse.h rule-parse.h \
	UDP_Rewriter.h DNS_Rewriter.h PacketDumper.h Rewriter.h \
	setsignal.h util.h

bro_LDADD = $(LIBIDMEF_LIBS) -lz -lpcap -lpcap  -lssl -lcrypto -lpcap -lresolv -ltermcap -ltermcap -lm $(LIBBINPAC_LIBS) -lgmp

# Files we generate locally that need to be removed with make distclean,
# mostly to keep distcheck happy.
# 
DISTCLEANFILES = DebugCmdInfoConstants.cc DebugCmdConstants.h \
	DebugCmdConstants.cc DebugCmdConstants.h \
	$(BINPAC_CC) $(BINPAC_H) $(BIF_BRO) y.output bif_lex.cc \
	bif_parse.h bif_parse.cc parse.y scan.cc parse.cc broparse.h \
	re-parse.cc re-parse.h re-scan.cc rule-parse.cc rule-parse.h \
	rule-scan.cc version.c


# Files created in the src dir.
MOSTLYCLEANFILES = $(BIF_FUNC_H) $(BIF_FUNC_DEF) $(BIF_FUNC_INIT) \
		   $(BIF_NETVAR_H) $(BIF_NETVAR_DEF) $(BIF_NETVAR_INIT) \
		   $(BRO_BIF) \
		   $(BINPAC_H) $(BINPAC_CC) \
		   $(DISTCLEANFILES)

POLICYDEST = ${datadir}/bro
CCOPT = -O -W -Wall -Wno-unused
INCLS =  -I${top_srcdir}/linux-include

#AM_CFLAGS = -I. -I.. -I$(top_srcdir)/src -I$(srcdir) -I$(top_builddir)
AM_CFLAGS = -I. -I$(top_srcdir)/aux/binpac/lib -I$(top_srcdir)/src -I$(srcdir) -I$(top_builddir) $(RELIC_FLAGS)

#AM_CPPFLAGS = $(AM_CFLAGS) $(LIBIDMEF_INCL) $(INCLS) $(CCOPT) -I/usr/include
AM_CPPFLAGS = $(AM_CFLAGS) $(LIBIDMEF_INCL) $(INCLS) $(CCOPT)
BIFCL = ./bifcl
BIFS = bro.bif event.bif const.bif \
	common-rw.bif finger-rw.bif ident-rw.bif \
	dns-rw.bif ftp-rw.bif smtp-rw.bif http-rw.bif strings.bif \
	smb-rw.bif

BIF_FUNC_H = $(BIFS:.bif=.bif.func_h)
BIF_FUNC_DEF = $(BIFS:.bif=.bif.func_def)
BIF_FUNC_INIT = $(BIFS:.bif=.bif.func_init)
BIF_NETVAR_H = $(BIFS:.bif=.bif.netvar_h)
BIF_NETVAR_DEF = $(BIFS:.bif=.bif.netvar_def)
BIF_NETVAR_INIT = $(BIFS:.bif=.bif.netvar_init)
BIF_BRO = $(BIFS:.bif=.bif.bro)
BIFOBJ = bif_arg.o bif_lex.o bif_parse.o
BIFCLEAN = bifcl $(BIFOBJ) $(BIF_FUNC_DEF) $(BIF_NETVAR_DEF) policy/*.bif.bro
PRIV = priv
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cc .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
bifcl$(EXEEXT): $(bifcl_OBJECTS) $(bifcl_DEPENDENCIES) 
	@rm -f bifcl$(EXEEXT)
	$(CXXLINK) $(bifcl_OBJECTS) $(bifcl_LDADD) $(LIBS)
bro$(EXEEXT): $(bro_OBJECTS) $(bro_DEPENDENCIES) 
	@rm -f bro$(EXEEXT)
	$(CXXLINK) $(bro_OBJECTS) $(bro_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/ARP.Po
include ./$(DEPDIR)/Active.Po
include ./$(DEPDIR)/Analyzer.Po
include ./$(DEPDIR)/Anon.Po
include ./$(DEPDIR)/Attr.Po
include ./$(DEPDIR)/BPF_Program.Po
include ./$(DEPDIR)/BackDoor.Po
include ./$(DEPDIR)/Base64.Po
include ./$(DEPDIR)/BitTorrent.Po
include ./$(DEPDIR)/BitTorrentTracker.Po
include ./$(DEPDIR)/BroString.Po
include ./$(DEPDIR)/CCL.Po
include ./$(DEPDIR)/ChunkedIO.Po
include ./$(DEPDIR)/CompHash.Po
include ./$(DEPDIR)/Conn.Po
include ./$(DEPDIR)/ConnCompressor.Po
include ./$(DEPDIR)/ContentLine.Po
include ./$(DEPDIR)/DCE_RPC.Po
include ./$(DEPDIR)/DFA.Po
include ./$(DEPDIR)/DHCP-binpac.Po
include ./$(DEPDIR)/DNS-binpac.Po
include ./$(DEPDIR)/DNS.Po
include ./$(DEPDIR)/DNS_Mgr.Po
include ./$(DEPDIR)/DNS_Rewriter.Po
include ./$(DEPDIR)/DPM.Po
include ./$(DEPDIR)/DbgBreakpoint.Po
include ./$(DEPDIR)/DbgHelp.Po
include ./$(DEPDIR)/DbgWatch.Po
include ./$(DEPDIR)/Debug.Po
include ./$(DEPDIR)/DebugCmds.Po
include ./$(DEPDIR)/DebugLogger.Po
include ./$(DEPDIR)/Desc.Po
include ./$(DEPDIR)/Dict.Po
include ./$(DEPDIR)/Discard.Po
include ./$(DEPDIR)/EquivClass.Po
include ./$(DEPDIR)/Event.Po
include ./$(DEPDIR)/EventHandler.Po
include ./$(DEPDIR)/EventLauncher.Po
include ./$(DEPDIR)/EventRegistry.Po
include ./$(DEPDIR)/Expr.Po
include ./$(DEPDIR)/FTP.Po
include ./$(DEPDIR)/File.Po
include ./$(DEPDIR)/FileAnalyzer.Po
include ./$(DEPDIR)/Finger.Po
include ./$(DEPDIR)/FlowSrc.Po
include ./$(DEPDIR)/Frag.Po
include ./$(DEPDIR)/Frame.Po
include ./$(DEPDIR)/Func.Po
include ./$(DEPDIR)/Gnutella.Po
include ./$(DEPDIR)/HTTP-binpac.Po
include ./$(DEPDIR)/HTTP.Po
include ./$(DEPDIR)/Hash.Po
include ./$(DEPDIR)/ICMP.Po
include ./$(DEPDIR)/ID.Po
include ./$(DEPDIR)/IOSource.Po
include ./$(DEPDIR)/IRC.Po
include ./$(DEPDIR)/Ident.Po
include ./$(DEPDIR)/IntSet.Po
include ./$(DEPDIR)/InterConn.Po
include ./$(DEPDIR)/List.Po
include ./$(DEPDIR)/Logger.Po
include ./$(DEPDIR)/Login.Po
include ./$(DEPDIR)/MIME.Po
include ./$(DEPDIR)/NCP.Po
include ./$(DEPDIR)/NFA.Po
include ./$(DEPDIR)/NFS.Po
include ./$(DEPDIR)/NTP.Po
include ./$(DEPDIR)/NVT.Po
include ./$(DEPDIR)/Net.Po
include ./$(DEPDIR)/NetVar.Po
include ./$(DEPDIR)/NetbiosSSN.Po
include ./$(DEPDIR)/OSFinger.Po
include ./$(DEPDIR)/Obj.Po
include ./$(DEPDIR)/PIA.Po
include ./$(DEPDIR)/POP3.Po
include ./$(DEPDIR)/PacketDumper.Po
include ./$(DEPDIR)/PacketFilter.Po
include ./$(DEPDIR)/PacketSort.Po
include ./$(DEPDIR)/PersistenceSerializer.Po
include ./$(DEPDIR)/PktDagSrc.Po
include ./$(DEPDIR)/PktSrc.Po
include ./$(DEPDIR)/PolicyFile.Po
include ./$(DEPDIR)/Portmap.Po
include ./$(DEPDIR)/PrefixTable.Po
include ./$(DEPDIR)/PriorityQueue.Po
include ./$(DEPDIR)/Queue.Po
include ./$(DEPDIR)/RE.Po
include ./$(DEPDIR)/RPC.Po
include ./$(DEPDIR)/RSH.Po
include ./$(DEPDIR)/Reassem.Po
include ./$(DEPDIR)/RemoteSerializer.Po
include ./$(DEPDIR)/Rewriter.Po
include ./$(DEPDIR)/Rlogin.Po
include ./$(DEPDIR)/Rule.Po
include ./$(DEPDIR)/RuleAction.Po
include ./$(DEPDIR)/RuleCondition.Po
include ./$(DEPDIR)/RuleMatcher.Po
include ./$(DEPDIR)/SMB.Po
include ./$(DEPDIR)/SMTP.Po
include ./$(DEPDIR)/SSH.Po
include ./$(DEPDIR)/SSL-binpac.Po
include ./$(DEPDIR)/SSLCiphers.Po
include ./$(DEPDIR)/SSLInterpreter.Po
include ./$(DEPDIR)/SSLProxy.Po
include ./$(DEPDIR)/SSLv2.Po
include ./$(DEPDIR)/SSLv3.Po
include ./$(DEPDIR)/SSLv3Automaton.Po
include ./$(DEPDIR)/Scope.Po
include ./$(DEPDIR)/ScriptAnaly.Po
include ./$(DEPDIR)/SerialObj.Po
include ./$(DEPDIR)/SerializationFormat.Po
include ./$(DEPDIR)/Serializer.Po
include ./$(DEPDIR)/Sessions.Po
include ./$(DEPDIR)/SmithWaterman.Po
include ./$(DEPDIR)/StateAccess.Po
include ./$(DEPDIR)/Stats.Po
include ./$(DEPDIR)/SteppingStone.Po
include ./$(DEPDIR)/Stmt.Po
include ./$(DEPDIR)/TCP.Po
include ./$(DEPDIR)/TCP_Endpoint.Po
include ./$(DEPDIR)/TCP_Reassembler.Po
include ./$(DEPDIR)/TCP_Rewriter.Po
include ./$(DEPDIR)/Telnet.Po
include ./$(DEPDIR)/Timer.Po
include ./$(DEPDIR)/Traverse.Po
include ./$(DEPDIR)/Trigger.Po
include ./$(DEPDIR)/TwoWise.Po
include ./$(DEPDIR)/Type.Po
include ./$(DEPDIR)/UDP.Po
include ./$(DEPDIR)/UDP_Rewriter.Po
include ./$(DEPDIR)/Val.Po
include ./$(DEPDIR)/Var.Po
include ./$(DEPDIR)/X509.Po
include ./$(DEPDIR)/XDR.Po
include ./$(DEPDIR)/ZIP.Po
include ./$(DEPDIR)/bif_arg.Po
include ./$(DEPDIR)/bif_lex.Po
include ./$(DEPDIR)/bif_parse.Po
include ./$(DEPDIR)/binpac-lib_pac.Po
include ./$(DEPDIR)/binpac_bro-lib_pac.Po
include ./$(DEPDIR)/bittorrent_pac.Po
include ./$(DEPDIR)/bsd-getopt-long.Po
include ./$(DEPDIR)/cq.Po
include ./$(DEPDIR)/dce_rpc_pac.Po
include ./$(DEPDIR)/dce_rpc_simple_pac.Po
include ./$(DEPDIR)/dhcp_pac.Po
include ./$(DEPDIR)/dns_pac.Po
include ./$(DEPDIR)/dns_tcp_pac.Po
include ./$(DEPDIR)/http_pac.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/malloc.Po
include ./$(DEPDIR)/md5.Po
include ./$(DEPDIR)/nb_dns.Po
include ./$(DEPDIR)/ncp_pac.Po
include ./$(DEPDIR)/net_util.Po
include ./$(DEPDIR)/netflow_pac.Po
include ./$(DEPDIR)/parse.Po
include ./$(DEPDIR)/patricia.Po
include ./$(DEPDIR)/ptwist168.Po
include ./$(DEPDIR)/re-parse.Po
include ./$(DEPDIR)/re-scan.Po
include ./$(DEPDIR)/rpc_pac.Po
include ./$(DEPDIR)/rule-parse.Po
include ./$(DEPDIR)/rule-scan.Po
include ./$(DEPDIR)/scan.Po
include ./$(DEPDIR)/setsignal.Po
include ./$(DEPDIR)/smb_pac.Po
include ./$(DEPDIR)/ssl-record-layer_pac.Po
include ./$(DEPDIR)/ssl_api.Po
include ./$(DEPDIR)/ssl_pac.Po
include ./$(DEPDIR)/strsep.Po
include ./$(DEPDIR)/tag.Po
include ./$(DEPDIR)/telex_block_flow.Po
include ./$(DEPDIR)/telex_tcp.Po
include ./$(DEPDIR)/telex_util.Po
include ./$(DEPDIR)/util.Po
include ./$(DEPDIR)/version.Po

.c.o:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c $<

.c.obj:
	$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c `$(CYGPATH_W) '$<'`

.cc.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cc.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(PROGRAMS) $(HEADERS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-test -z "$(DISTCLEANFILES)" || rm -f $(DISTCLEANFILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-noinstPROGRAMS ctags distclean \
	distclean-compile distclean-generic distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


opt:
	@$(MAKE) $(MFLAGS) CCOPT="`echo $(CCOPT) | sed -e 's/-O2//;s/$$/ -O3/'`"

debug: 
	@$(MAKE) $(MFLAGS) CCOPT="`echo $(CCOPT) | sed -e 's/-O2/-O0/g;s/$$/ -g -Wall -DDEBUG/'`"

profile:
	@$(MAKE) $(MFLAGS) CCOPT="`echo $(CCOPT) | sed -e 's/$$/ -O0 -pg/'`" LDFLAGS="`echo $(LDFLAGS) | sed -e 's/$$/ -pg/'`"

mpatrol:
	@$(MAKE) $(MFLAGS) LIBS="`echo $(LIBS) | sed -e 's/$$/ -lmpatrol/'`"

version.c: $(top_srcdir)/VERSION
	@rm -f $@
	sed -e 's/.*/char version[] = "&";/' $(top_srcdir)/VERSION > $@

DebugCmdInfoConstants.cc DebugCmdInfoConstants.h: DebugCmdInfoConstants.in
	perl $(srcdir)/make_dbg_constants.pl $(srcdir)/DebugCmdInfoConstants.in

DebugCmdConstants.cc DebugCmdConstants.h: DebugCmdInfoConstants.in
	perl $(srcdir)/make_dbg_constants.pl $(srcdir)/DebugCmdInfoConstants.in

# Should these be moved to $(destdir)/policy?
finger-rw.bif.func_h finger-rw.bif.func_def finger-rw.bif.func_init: finger-rw.bif $(BIFCL)
	$(BIFCL) $(srcdir)/finger-rw.bif
	@cp finger-rw.bif.bro ../policy/

ftp-rw.bif.func_h ftp-rw.bif.func_def ftp-rw.bif.func_init: ftp-rw.bif $(BIFCL)
	$(BIFCL) $(srcdir)/ftp-rw.bif
	@cp ftp-rw.bif.bro ../policy/

smb-rw.bif.func_h smb-rw.bif.func_def smb-rw.bif.func_init: smb-rw.bif $(BIFCL)
	$(BIFCL) $(srcdir)/smb-rw.bif
	@cp smb-rw.bif.bro ../policy/

dns-rw.bif.func_h dns-rw.bif.func_def dns-rw.bif.func_init: dns-rw.bif $(BIFCL)
	$(BIFCL) $(srcdir)/dns-rw.bif
	@cp dns-rw.bif.bro ../policy/

bro.bif.func_h bro.bif.func_def bro.bif.func_init: bro.bif $(BIFCL)
	$(BIFCL) $(srcdir)/bro.bif
	@cp bro.bif.bro ../policy/

ident-rw.bif.func_h ident-rw.bif.func_def ident-rw.bif.func_init: ident-rw.bif $(BIFCL)
	$(BIFCL) $(srcdir)/ident-rw.bif
	@cp ident-rw.bif.bro ../policy/

event.bif.func_h event.bif.netvar_h event.bif.netvar_def event.bif.netvar_init: event.bif $(BIFCL)
	$(BIFCL) $(srcdir)/event.bif
	@cp event.bif.bro ../policy/

const.bif.func_h const.bif.netvar_h const.bif.netvar_def const.bif.netvar_init: const.bif $(BIFCL)
	$(BIFCL) $(srcdir)/const.bif
	@cp const.bif.bro ../policy/

binpac-lib_pac.h binpac-lib_pac.cc: binpac-lib.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) $(LIBBINPAC)
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/binpac-lib.pac

binpac_bro-lib_pac.h binpac_bro-lib_pac.cc: binpac_bro-lib.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR)
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/binpac_bro-lib.pac

bittorrent_pac.h bittorrent_pac.cc: bittorrent.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) bittorrent-protocol.pac bittorrent-analyzer.pac
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/bittorrent.pac

dce_rpc_pac.h dce_rpc_pac.cc: dce_rpc.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) dce_rpc-protocol.pac dce_rpc-analyzer.pac
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/dce_rpc.pac

dce_rpc_simple_pac.h dce_rpc_simple_pac.cc: dce_rpc_simple.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) dce_rpc-protocol.pac
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/dce_rpc_simple.pac

dhcp_pac.h dhcp_pac.cc: dhcp.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) dhcp-protocol.pac dhcp-analyzer.pac
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/dhcp.pac

dns_pac.h dns_pac.cc: dns.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) dns-protocol.pac dns-analyzer.pac
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/dns.pac

dns_tcp_pac.h dns_tcp_pac.cc: dns_tcp.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR)
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/dns_tcp.pac

http_pac.h http_pac.cc: http.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) http-protocol.pac http-analyzer.pac
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/http.pac

ncp_pac.h ncp_pac.cc: ncp.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR)
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/ncp.pac

netflow_pac.h netflow_pac.cc: netflow.pac netflow-protocol.pac netflow-analyzer.pac Event.h $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR)
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/netflow.pac

rpc_pac.h rpc_pac.cc: rpc.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) $(BINPAC_RPC_AUXSRC)
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/rpc.pac

smb_pac.h smb_pac.cc: smb.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) smb-protocol.pac smb-mailslot.pac smb-pipe.pac
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/smb.pac

ssl_pac.h ssl_pac.cc: ssl.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR) ssl-protocol.pac ssl-analyzer.pac
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/ssl.pac

ssl-record-layer_pac.h ssl-record-layer_pac.cc: ssl-record-layer.pac $(BINPAC) $(BINPAC_AUXSRC) $(BINPAC_AUXHDR)
	$(BINPAC) $(BINPAC_FLAGS) $(srcdir)/ssl-record-layer.pac

patricia.o: patricia.c patricia.h
	$(CC) $(CFLAGS) -c $(srcdir)/patricia.c

smtp-rw.bif.func_h smtp-rw.bif.func_def smtp-rw.bif.func_init: smtp-rw.bif $(BIFCL)
	$(BIFCL) $(srcdir)/smtp-rw.bif
	@cp smtp-rw.bif.bro ../policy/

http-rw.bif.func_h http-rw.bif.func_def http-rw.bif.func_init: http-rw.bif $(BIFCL)
	$(BIFCL) $(srcdir)/http-rw.bif
	@cp http-rw.bif.bro ../policy/

common-rw.bif.func_h common-rw.bif.func_def common-rw.bif.func_init: common-rw.bif $(BIFCL)
	$(BIFCL) $(srcdir)/common-rw.bif
	@cp common-rw.bif.bro ../policy/

strings.bif.func_h strings.bif.func_def strings.bif.func_init: strings.bif $(BIFCL)
	$(BIFCL) $(srcdir)/strings.bif
	@cp strings.bif.bro ../policy/

broparse.h parse.cc: parse.y
	$(LOCK_FILE) lock broparse || exit; \
	test -e broparse.h && ( $(LOCK_FILE) unlock broparse; exit 0; ); \
	$(YACC) $(YFLAGS) -o p.c parse.y; \
	sed '/extern char.*getenv/d;s/yylex/brolex/' <p.c >parse.cc; \
	mv p.h broparse.h; \
	rm p.c; \
	$(LOCK_FILE) unlock broparse

parse.y: parse.in make_parser.pl
	@rm -f parse.y
	perl -w $(srcdir)/make_parser.pl $(srcdir) $(top_builddir)/src "$(YACC)"
	chmod -w parse.y

scan.cc: scan.l broparse.h
	$(LEX) $(LFLAGS) -Pbro -oscan.cc $(srcdir)/scan.l

bif_lex.cc: builtin-func.l bif_parse.h
	$(LEX) -o$@ $(srcdir)/builtin-func.l

re-parse.h re-parse.cc: re-parse.y
	$(LOCK_FILE) lock reparse || exit; \
	test -e re-parse.h && ( $(LOCK_FILE) unlock reparse; exit 0; ); \
	$(YACC) $(YFLAGS) -o rep.c $(srcdir)/re-parse.y; \
	sed '/extern char.*getenv/d;s/yylex/re_lex/;s/yy/RE_/g' <rep.c >re-parse.cc; \
	mv rep.h re-parse.h; \
	rm rep.c; \
	$(LOCK_FILE) unlock reparse

re-scan.cc: re-scan.l
	$(LEX) $(LFLAGS) -Pre_ -ore-scan.cc $(srcdir)/re-scan.l

rule-parse.h rule-parse.cc: rule-parse.y
	$(LOCK_FILE) lock ruleparse || exit; \
	test -e rule-parse.h && ( $(LOCK_FILE) unlock ruleparse; exit 0; ); \
	$(YACC) $(YFLAGS) -o rup.c $(srcdir)/rule-parse.y; \
	sed '/extern char.*getenv/d;s/yylex/rules_lex/;s/yy/rules_/g' <rup.c >rule-parse.cc; \
	sed '/extern char.*getenv/d;s/yylex/rules_lex/;s/yy/rules_/g' <rup.h >rule-parse.h; \
	rm rup.c rup.h; \
	$(LOCK_FILE) unlock ruleparse

rule-scan.cc: rule-scan.l
	$(LEX) $(LFLAGS) -Prules_ -orule-scan.cc $(srcdir)/rule-scan.l

bif_parse.h bif_parse.cc: builtin-func.y bif_arg.h bif_type.def
	$(LOCK_FILE) lock bifparse || exit; \
	test -e bif_parse.h && ( $(LOCK_FILE) unlock bifparse; exit 0; ); \
	$(YACC) $(YFLAGS) -o bf.c $(top_srcdir)/src/builtin-func.y; \
	mv bf.h bif_parse.h; \
	mv bf.c bif_parse.cc; \
	$(LOCK_FILE) unlock bifparse

# Need this rule because of the POLICYDEST.
util.o: util.cc util.h
	$(CXX) $(AM_CPPFLAGS) -DPOLICYDEST=\"$(POLICYDEST)\" -c $(srcdir)/util.cc

CHANGES: $(top_srcdir)/VERSION
	@echo "You need to update CHANGES"

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
