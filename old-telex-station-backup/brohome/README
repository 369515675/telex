Note: this is the code that runs at the ISP.
If you would like to be a user of Telex (i.e. you use a web browser), see
telex-tunnel/README

- ssl
- tag
- bro
- bronnect
- service

There are three basic processes that run on the Telex station:
    Bro - detects tags - must run Telex version of bro, using our 
        bro-script (telex-ssl.bro)
    Bronnect - after bro detects tags, sends flows here to be
        (server-side) impersonated. Forwards between client and service
    Service - whatever the user wants to connect to; typically an 
        http_proxy
        

=============
privkeys file
=============
    This file is read by Bro upon startup, and contains a list of private
keys and port pairs. This allows Telex users to be use different public
keys for different applications - for example, they can use one public key
to gain access to an http_proxy, and a different public key to get a list
of tor bridges.

Key pairs are generated by the ./genkeys script in the tag directory, and
the program outputs two files: privkey and pubkey, corresponding to the
private and public keys. The pubkey should be given to the user, and the
privkey kept on the Telex station, in a protected place.

The format of the privkeys file is:
    2-byte num_keys (n)
    21-byte privkey_1
    2-byte port_1
    ...
    21 byte privkey_n
    2-byte port_n

all of the 2-byte numbers are in little endian.
This file can be easily generated with the package_keys.py script in the
tag directory. For example, if you had two private keys, privkey1 and
privkey2, corresponding to two services running on ports 3128 and 3129
correspondingly, you would run    
    ./package_keys.py ./privkey1 3128 ./privkey2 3129 > privkeys
Then, move privkeys to the directory from which you run bro, so that it
can be read at startup. Bro will list the ports it reads at startup to
confirm.


